{"version":3,"sources":["components/Firebase.js","components/LoginPage.js","components/TeamBar.js","components/ChatBox.js","App.js","reportWebVitals.js","index.js"],"names":["db","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","getFirestore","LoginPage","history","useHistory","auth","getAuth","type","id","onClick","email","document","getElementById","value","password","signInWithEmailAndPassword","then","userCredential","user","push","catch","error","code","message","alert","createUserWithEmailAndPassword","TeamBar","props","useState","teamsArray","setTeamArray","setTeamDB","useEffect","onSnapshot","collection","snapShot","docs","map","doc","onAuthStateChanged","uid","setDoc","userTeams","className","userName","userRole","icon","faSignOutAlt","color","signOut","team","to","faPlus","size","teamName","prompt","Math","floor","random","toString","padStart","ChatBox","setMessage","msg","name","placeholder","msgUsers","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4b759fca.chunk.js","sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getFirestore } from \"firebase/firestore\";\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAKaWg26Y150wvnTbdPQ6Cwl8v8evk6FVQ\",\n    authDomain: \"meeting-reporter.firebaseapp.com\",\n    projectId: \"meeting-reporter\",\n    storageBucket: \"meeting-reporter.appspot.com\",\n    messagingSenderId: \"914264360649\",\n    appId: \"1:914264360649:web:d152fba36eed8d982a2f18\",\n    measurementId: \"G-174GS70P3N\"\n};\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore();\nexport { app, db };\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { getAuth, signInWithEmailAndPassword, createUserWithEmailAndPassword } from \"firebase/auth\";\nimport { app } from './Firebase';\n\nexport default function LoginPage() {\n    const history = useHistory();\n    const auth = getAuth();\n\n    const fireBaseSignIn = () => {\n        const email = document.getElementById(\"name\").value;\n        const password = document.getElementById(\"email\").value;\n        signInWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                history.push(\"TeamBar\");\n                // ...\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                alert(error.code);\n            });\n\n    };\n\n    const fireBaseSignUp = () => {\n        const email = document.getElementById(\"name\").value;\n        const password = document.getElementById(\"email\").value;\n        createUserWithEmailAndPassword(auth, email, password)\n            .then((userCredential) => {\n                // Signed in \n                const user = userCredential.user;\n                alert(\"You have successfully Signup\")\n                history.push(\"TeamBar\")\n\n            })\n            .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n                alert(\"Problem Occuredd\")\n                // ..\n            });\n    };\n\n    return (\n        <>\n            Emal Address<input type=\"text\" id=\"name\" />\n            Password<input type=\"text\" id=\"email\" />\n            <br />\n            <br />\n            <button onClick={fireBaseSignIn}>SignIn</button>\n            <button onClick={fireBaseSignUp}>SignUp</button>\n\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport reactDom from 'react-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Link, useHistory } from 'react-router-dom';\nimport { getAuth, onAuthStateChanged, signOut } from \"firebase/auth\";\nimport { app, db } from './Firebase';\nimport { doc, setDoc } from \"firebase/firestore\";\nimport { onSnapshot, collection } from 'firebase/firestore';\n\n\n\nexport default function TeamBar(props) {\n    const history = useHistory();\n    const auth = getAuth();\n    const [teamsArray, setTeamArray] = useState([]);\n    const [teamsDB, setTeamDB] = useState([]);\n    const createTeam = () => {\n        let teamName = prompt(\"Enter Your Team Name\")\n        let randomNum = Math.floor(Math.random() * 1000000).toString().padStart(6, 0);\n        let APITeamRoom = teamName + randomNum;\n        setTeamArray([...teamsArray, teamName]);\n        setDoc(doc(db, \"teams\", teamName), {\n        });\n    }\n    useEffect(() => {\n        onSnapshot(collection(db, \"teams\"), (snapShot) => setTeamDB(snapShot.docs.map((doc) => doc.id))\n        )\n    })\n\n\n\n    const signingOut = () => {\n        signOut(auth).then(() => {\n            history.push(\"/\")\n        }).catch((error) => {\n            alert(\"An error happened.\")\n        });\n    }\n    onAuthStateChanged(auth, (user) => {\n        if (user) {\n            const uid = user.uid;\n            setDoc(doc(db, \"users\", uid), {\n                email: user.email,\n                userTeams: teamsArray\n            });\n            // ...\n        } else {\n            // User is signed out\n            // ...\n        }\n    });\n\n\n\n    return (\n        <>\n            <div className=\"headerComp\">\n                <p className=\"usersName\">{props.userName}</p>\n                <p className=\"usersStatus\">{props.userRole}</p>\n                <FontAwesomeIcon icon={faSignOutAlt} color=\"#000\" onClick={signingOut} className=\"icon\" />\n            </div>\n\n            <div className=\"adminBody\">\n                {\n                    teamsArray.map((team) => {\n                        return <Link to=\"ChatBox\" className=\"divToAdd\" >{team}</Link>\n                    })\n                }\n            </div>\n\n            <div className=\"bottomOfAdm\">\n                <FontAwesomeIcon icon={faPlus} color=\"#fff\" size=\"2x\" onClick={createTeam} className=\"icon\" />\n            </div>\n        </>\n    )\n}\n","import React from 'react';\nimport { useState } from 'react';\n\nexport default function ChatBox() {\n    const [message, setMessage] = useState([]);\n\n    const addingMessage = () => {\n        const msgUsers = document.getElementById(\"chatArea\").value;\n        setMessage([...message, msgUsers]);\n    }\n    return (\n        <>\n            <div className=\"body\">\n                {message.map((msg) => {\n                    return <p className=\"userMessage\">{msg}</p>\n                })}\n            </div>\n            <input type=\"text\" name=\"\" id=\"chatArea\" placeholder=\"Type Your Answers\" />\n            <button className=\"submit\" onClick={addingMessage}>Submit</button>\n        </>\n    )\n}\n","import './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport LoginPage from './components/LoginPage';\nimport TeamBar from './components/TeamBar';\nimport ChatBox from './components/ChatBox';\n\nfunction App() {\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <LoginPage />\n          </Route>\n          <Route exact path=\"/TeamBar\">\n            <TeamBar userName=\"Abdullah\" userRole=\"admin\" />\n          </Route>\n          <Route exact path=\"/ChatBox\">\n            <ChatBox />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}